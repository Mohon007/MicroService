services:
  CatalogDb:
    container_name: CatalogDb
    image: mongo
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - /site:/data/db:rw
  basket.api:
    build:
      context: F:\MicroService\MicroService
      dockerfile: Basket.API/Dockerfile
    container_name: basketapi
    depends_on:
      basketdb:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings:Redis: basketdb:6379
      EventBus:HostName: rabbitmq
    image: basketapi
    ports:
    - published: 8001
      target: 80
    volumes:
    - C:\Users\AhsanulKabir\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\AhsanulKabir\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  basketdb:
    container_name: basketdb
    image: redis
    ports:
    - published: 6379
      target: 6379
    restart: always
  catalog.api:
    build:
      context: F:\MicroService\MicroService
      dockerfile: Catalog.API/Dockerfile
    container_name: catalogapi
    depends_on:
      CatalogDb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogDatabaseSettings:ConnectionString: mongodb://CatalogDb:27017
    image: catalogapi
    ports:
    - published: 8000
      target: 80
    volumes:
    - C:\Users\AhsanulKabir\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\AhsanulKabir\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
    - published: 5672
      target: 5672
    - published: 15672
      target: 15672
    restart: always
version: '3.4'